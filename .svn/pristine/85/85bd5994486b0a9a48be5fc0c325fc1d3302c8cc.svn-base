package com.epam.web.command;

import com.epam.Path;
import com.epam.db.DBManager;
import com.epam.db.TransactionManager;
import com.epam.parser.FlightParser;
import com.epam.entity.Flight;
import com.epam.dao.impl.MyFlightDAO;
import com.epam.validator.FlightsValidator;
import org.apache.log4j.Logger;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.sql.Connection;
import java.util.ArrayList;

public class ChangeFlight extends Command {
    private static final Logger LOG = Logger.getLogger(ChangeFlight.class);

    MyFlightDAO dao;
    DBManager dbManager;

    public ChangeFlight(MyFlightDAO dao, DBManager dbManager) {
        this.dao = dao;
        this.dbManager = dbManager;
    }

    @Override
    public String execute(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {
        LOG.debug("Command starts");
        Connection connection = TransactionManager.prepareConnection(dbManager.getConnection());

        Flight f = changeFlight(request);
        ArrayList<String> list = FlightsValidator.validateChangeFlights(f,connection);
        if (list.isEmpty()) {
            dao.changeFlight(connection, f);
        }else {
            request.getSession().setAttribute("errors",list);
            return Path.FLIGHTS_CHANGE;
        }
        LOG.trace("Errors in request --> " + list);

        LOG.debug("Command finished");

        TransactionManager.close(connection);
        return Path.FLIGHT_RETURN_LIST_FOR_CHANGE;
    }
    public Flight changeFlight(HttpServletRequest req){
        Connection connection = TransactionManager.prepareConnection(dbManager.getConnection());
        return dao.fillFlight(connection, FlightParser.flightDTOparser(req));
    }

}

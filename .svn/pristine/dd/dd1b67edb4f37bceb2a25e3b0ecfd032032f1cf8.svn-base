package com.epam.web;

import com.epam.Path;
import com.epam.web.command.Command;
import com.epam.web.command.CommandContainer;
import org.apache.log4j.Logger;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;


public class Controller extends HttpServlet {
    private static final Logger LOG = Logger.getLogger(Controller.class);

    private CommandContainer commandContainer;
    @Override
    public void init() {
        commandContainer = (CommandContainer) getServletContext().getAttribute("commandContainer");
    }

    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        process(req,resp,ActionType.GET);
    }

    @Override
    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        process(req,resp,ActionType.POST);
    }
    private void process(HttpServletRequest req, HttpServletResponse resp, ActionType actionType) throws ServletException, IOException {
        LOG.debug("Controller starts");

        // extract command name from the request
        String commandName = req.getParameter("command");
        LOG.trace("Request parameter: command --> " + commandName);

        // obtain command object by its name
        Command command = commandContainer.get(commandName);
        LOG.trace("Obtained command --> " + command);

        // execute command and get forward address
        String path = Path.PAGE_ERROR_PAGE;
        try {
            path = command.execute(req, resp);
        } catch (ServletException | IOException e) {
            e.printStackTrace();
        }
        LOG.trace("Forward address --> " + path);

        LOG.debug("Controller finished, now go to forward address --> " + path);
        if (actionType == ActionType.POST){
            resp.sendRedirect(req.getContextPath()+path);
        }else if(actionType == ActionType.GET){
            RequestDispatcher dispatcher = req.getRequestDispatcher(path);
            dispatcher.forward(req,resp);
        }

    }
}
